# Generated by Django 3.2.6 on 2021-10-22 14:08

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mosaiq_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dose_Hst',
            fields=[
                ('dhs_id', models.IntegerField(db_column='DHS_ID', primary_key=True, serialize=False)),
                ('datahora', models.DateTimeField(db_column='Create_DtTm')),
                ('energia', models.IntegerField(db_column='Energy')),
                ('dose_campo', models.IntegerField(db_column='Dose_Addtl_Projected')),
                ('unidade_monitora', models.IntegerField(db_column='Meterset')),
            ],
            options={
                'db_table': 'Dose_Hst',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fase',
            fields=[
                ('idfase', models.IntegerField(db_column='SIT_ID', primary_key=True, serialize=False)),
                ('numerofase', models.IntegerField(db_column='DisplaySequence')),
                ('locanatomica', models.CharField(db_column='Site_Name', max_length=20)),
                ('modalidade', models.CharField(db_column='Modality', max_length=10)),
                ('tecnica', models.CharField(db_column='Technique', max_length=20)),
                ('dosediaria', models.IntegerField(db_column='Dose_Tx')),
                ('dosetotal', models.IntegerField(db_column='Dose_Ttl')),
                ('qtdsessoes', models.IntegerField(db_column='Fractions')),
                ('create_dt', models.DateTimeField(db_column='Create_DtTm')),
                ('edit_dt', models.DateTimeField(db_column='Edit_DtTm')),
                ('sanct_dt', models.DateTimeField(db_column='Sanct_DtTm')),
                ('version', models.IntegerField(db_column='Version')),
                ('reference_fraction', models.IntegerField(db_column='Reference_Fraction')),
            ],
            options={
                'db_table': 'Site',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatCPlan',
            fields=[
                ('pcp_id', models.IntegerField(db_column='PCP_ID', primary_key=True, serialize=False)),
                ('intencao', models.CharField(db_column='Tx_Intent', max_length=20)),
            ],
            options={
                'db_table': 'PatCPlan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TxField',
            fields=[
                ('id_campo', models.IntegerField(db_column='FLD_ID', primary_key=True, serialize=False)),
                ('nome_campo', models.CharField(db_column='Field_Name', max_length=20)),
                ('numero_campo', models.IntegerField(db_column='DisplaySequence')),
                ('dose_campo', models.IntegerField(db_column='Cgray')),
                ('unidade_monitora', models.IntegerField(db_column='Meterset')),
                ('create_dt', models.DateTimeField(db_column='Create_DtTm')),
                ('edit_dt', models.DateTimeField(db_column='Edit_DtTm')),
                ('sanct_dt', models.DateTimeField(db_column='Sanct_DtTm')),
                ('version', models.IntegerField(db_column='Version')),
            ],
            options={
                'db_table': 'TxField',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TxFieldPoint',
            fields=[
                ('tfp_id', models.IntegerField(db_column='TFP_ID', primary_key=True, serialize=False)),
                ('energia', models.IntegerField(db_column='Energy')),
                ('energia_unidade', models.IntegerField(db_column='Energy_Unit_Enum')),
                ('gantry', models.IntegerField(db_column='Gantry_Ang')),
                ('colimador', models.IntegerField(db_column='Coll_Ang')),
            ],
            options={
                'db_table': 'TxFieldPoint',
                'managed': False,
            },
        ),
    ]
